<?php
/**
 * Post Table Pro Custom Data Type - Model
 *
 * Gothic's Landscape Selection Tool Administrator/Homebuilder Interface Uses the Posts Table Pro plugin.
 * This class extends a custom data type to make the tables generated by the plugin even more awesome.
 *
 * Based on the tutorial on Barn 2 Media's Knowledge Base
 * @see https://barn2.co.uk/kb/adding-custom-column-posts-table/
 *
 * @link        https://gothiclandscape.com/
 * @since       1.0.0
 *
 * @package     Gothic Landscape Selections
 * @subpackage  PostType
 * @author      Jeremy Scott
 * @link        https://jeremyescott.com/
 * @copyright   (c) 2018-2020 Gothic Landscape
 * @license     GPL-3.0++
 *
 * @license     https://opensource.org/licenses/GPL-3.0 GNU General Public License version 3
 */

namespace Gothic\Selections\PostsTablePro;

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

use \Barn2\Plugin\Posts_Table_Pro\Data\Abstract_Table_Data;
use Gothic\Selections\PostType\Builder;

/**
 * Gets data for the 'media_type' column to use in the posts table.
 *
 * @license GPL-3.0
 */
final class Resolver extends Abstract_Table_Data {

	
	/**
	 * Get Data
	 *
	 * Based on the tutorial on Barn 2 Media's Knowledge Base
	 * @see https://barn2.co.uk/kb/adding-custom-column-posts-table/
	 *
	 * @since 1.0.0
	 *
	 * @access public
	 *
	 * @return string
	 */
	public function get_data() {

		// $modifier = get_post_meta( $this->post->ID, 'modifier', true ) ?: get_post_meta( $this->post->ID, 'email', true );
		$modifier = get_the_modified_author($this->post->ID);
		$statuses = ["in_progress", "seller_action"];
		$currentStatus = get_post_meta($this->post->ID, "_status",true);
		$number = $this->post->post_name;
		

		if ( ! $number ) {
			return '';
		}

		$url = get_permalink( $this->post->ID );

		if ( in_array( get_post_meta( $this->post->ID, '_status', true ), [ 'in_progress', 'pending' ], true ) ) {
			$url .= 'edit';
		} else {
			$url .= 'show';
		}
		if ( !empty(get_post_meta( $this->post->ID, 'problems', true )) || $currentStatus == "seller_action") {
			// if(in_array($currentStatus,$statuses)){
			// 	return sprintf( '<a class="crunch-button crunch-button__full-background crunch-button__full-background--primary-color crunch-button__full-background--small d-inline-block w-auto" href="%s">%s</a>', esc_url( $url ), "Resolver");
			// 	// return sprintf( '<form method="POST"><button type="submit" name="resolve" value="%d" class="js-resolve-button font-size-12 crunch-button crunch-button__full-background crunch-button__full-background--primary-color crunch-button__full-background--small">%s</button></form>', $this->post->ID, "Resolve");
			// }else {
			// 	return "";
			// }
			return sprintf( '<a class="crunch-button crunch-button__full-background crunch-button__full-background--primary-color crunch-button__full-background--small d-inline-block w-auto" href="%s">%s</a>', esc_url( $url ), "Resolve");
		}else {
			return "";
		}
	}
}