<?php
/**
 * Post Table Pro Custom Data Type
 *
 * Gothic's Landscape Selection Tool Administrator/Homebuilder Interface Uses the Posts Table Pro plugin.
 * This class extends a custom data type to make the tables generated by the plugin even more awesome.
 *
 * Based on the tutorial on Barn 2 Media's Knowledge Base
 * @see https://barn2.co.uk/kb/adding-custom-column-posts-table/
 *
 * @link        https://gothiclandscape.com/
 * @since       1.0.0
 *
 * @package     Gothic Landscape Selections
 * @subpackage  PostType
 * @author      Jeremy Scott
 * @link        https://jeremyescott.com/
 * @copyright   (c) 2018-2020 Gothic Landscape
 * @license     GPL-3.0++
 *
 * @license     https://opensource.org/licenses/GPL-3.0 GNU General Public License version 3
 */

namespace Gothic\Selections\PostsTablePro;

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

use \DateTime;
use \Barn2\Plugin\Posts_Table_Pro\Data\Abstract_Table_Data;
use Gothic\Selections\Helper\Misc;

/**
 * Gets data for the 'media_type' column to use in the posts table.
 *
 * @license GPL-3.0
 */
final class DateLastAccessed extends Abstract_Table_Data {

	/**
	 * Get Data
	 *
	 * Based on the tutorial on Barn 2 Media's Knowledge Base
	 * @see https://barn2.co.uk/kb/adding-custom-column-posts-table/
	 *
	 * @since 1.0.0
	 *
	 * @access public
	 *
	 * @return string
	 */
	public function get_data() {

		$last_accessed = get_post_meta( $this->post->ID, '_last_accessed', true );

		$date = new DateTime( $last_accessed );
		$now  = new DateTime();
		$diff = $date->diff( $now );

		if ( empty( $last_accessed ) ) {
			$date_val = 'Not accessed by user.';
		} elseif ( $diff->m > 1 ) {
			$date_val = $diff->m . ' months';
		} elseif ( $diff->m > 0 ) {
			$date_val = $diff->m . ' month';
		} elseif ( $diff->d > 1 ) {
			$date_val = $diff->d . ' days';
		} elseif ( 1 === $diff->d ) {
			$date_val = 'Yesterday';
		} elseif ( $diff->h > 1 ) {
			$date_val = $diff->h . ' hours';
		} elseif ( 1 === $diff->h ) {
			$date_val = '1 hour';
		} elseif ( $diff->i > 1 ) {
			$date_val = $diff->i . ' minutes';
		} elseif ( $diff->i === 1 ) {
			$date_val = '1 minute';
		} else {
			$date_val = 'Just Now';
		}

		return sprintf( '<time datetime="%s">%s</time>', $date->format( 'c' ), $date_val );
	}
}